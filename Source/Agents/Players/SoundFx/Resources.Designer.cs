//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.Agent.Player.SoundFx {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.Agent.Player.SoundFx.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Linel Software.
        ///Converted to C# by Thomas Neumann.
        ///
        ///This player can only play SoundFX 2.0 modules, but it is also used to play the 1.x modules, but not directly. The old formats are converted to 2.0 format and then this player is used.
        ///
        ///It is based on the original assembly player from the Amiga..
        /// </summary>
        internal static string IDS_SFX_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_SFX_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Linel Software.
        ///Converted to C# by Thomas Neumann.
        ///
        ///The SoundFX file format is like SoundTracker. It only have a few effects, but it also have some special pattern commands, which SoundTracker doesn&apos;t have. This version now supports 31 samples, where the previous versions only have 15..
        /// </summary>
        internal static string IDS_SFX_DESCRIPTION_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_SFX_DESCRIPTION_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module header.
        /// </summary>
        internal static string IDS_SFX_ERR_LOADING_HEADER {
            get {
                return ResourceManager.GetString("IDS_SFX_ERR_LOADING_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module patterns.
        /// </summary>
        internal static string IDS_SFX_ERR_LOADING_PATTERNS {
            get {
                return ResourceManager.GetString("IDS_SFX_ERR_LOADING_PATTERNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the sample information.
        /// </summary>
        internal static string IDS_SFX_ERR_LOADING_SAMPLEINFO {
            get {
                return ResourceManager.GetString("IDS_SFX_ERR_LOADING_SAMPLEINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module samples.
        /// </summary>
        internal static string IDS_SFX_ERR_LOADING_SAMPLES {
            get {
                return ResourceManager.GetString("IDS_SFX_ERR_LOADING_SAMPLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of positions:.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE0 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used patterns:.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE1 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported / used samples:.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE2 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing position:.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE3 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing pattern:.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE4 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current tempo (Hz):.
        /// </summary>
        internal static string IDS_SFX_INFODESCLINE5 {
            get {
                return ResourceManager.GetString("IDS_SFX_INFODESCLINE5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SoundFX.
        /// </summary>
        internal static string IDS_SFX_NAME {
            get {
                return ResourceManager.GetString("IDS_SFX_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SoundFX 2.0.
        /// </summary>
        internal static string IDS_SFX_NAME_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_SFX_NAME_AGENT1", resourceCulture);
            }
        }
    }
}
