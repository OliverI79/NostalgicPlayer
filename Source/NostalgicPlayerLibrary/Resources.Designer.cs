//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.PlayerLibrary {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.PlayerLibrary.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load and convert the file ({0}).
        ///
        ///Converter {1} returned the following error:
        ///{2}..
        /// </summary>
        internal static string IDS_ERR_CONVERT_MODULE {
            get {
                return ResourceManager.GetString("IDS_ERR_CONVERT_MODULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load and decrunch the file ({0}).
        ///
        ///Decruncher {1} returned the following error:
        ///{2}..
        /// </summary>
        internal static string IDS_ERR_DECRUNCH_MODULE {
            get {
                return ResourceManager.GetString("IDS_ERR_DECRUNCH_MODULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file error occurred on file ({0}) with error 0x{1}.
        ///{2}..
        /// </summary>
        internal static string IDS_ERR_FILE {
            get {
                return ResourceManager.GetString("IDS_ERR_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the headers from the stream {0}. Failed with HTTP error {1}.
        /// </summary>
        internal static string IDS_ERR_GET_STREAM_HEADERS {
            get {
                return ResourceManager.GetString("IDS_ERR_GET_STREAM_HEADERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load the file ({0}).
        ///
        ///Player {1} returned the following error:
        ///{2}..
        /// </summary>
        internal static string IDS_ERR_LOAD_MODULE {
            get {
                return ResourceManager.GetString("IDS_ERR_LOAD_MODULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize the mixer with error 0x{0}.
        ///{1}..
        /// </summary>
        internal static string IDS_ERR_MIXER_INIT {
            get {
                return ResourceManager.GetString("IDS_ERR_MIXER_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize the player and mixer.
        ///{0}..
        /// </summary>
        internal static string IDS_ERR_PLAYER_INIT {
            get {
                return ResourceManager.GetString("IDS_ERR_PLAYER_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize player with selected song.
        ///{0}..
        /// </summary>
        internal static string IDS_ERR_PLAYER_SELECTSONG {
            get {
                return ResourceManager.GetString("IDS_ERR_PLAYER_SELECTSONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize the resampler with error 0x{0}.
        ///{1}..
        /// </summary>
        internal static string IDS_ERR_RESAMPLER_INIT {
            get {
                return ResourceManager.GetString("IDS_ERR_RESAMPLER_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred on stream ({0}) with error 0x{1}.
        ///{2}..
        /// </summary>
        internal static string IDS_ERR_STREAM {
            get {
                return ResourceManager.GetString("IDS_ERR_STREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many redirects occurred on stream {0}.
        /// </summary>
        internal static string IDS_ERR_TOO_MANY_REDIRECTS {
            get {
                return ResourceManager.GetString("IDS_ERR_TOO_MANY_REDIRECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown module format in file ({0})..
        /// </summary>
        internal static string IDS_ERR_UNKNOWN_MODULE {
            get {
                return ResourceManager.GetString("IDS_ERR_UNKNOWN_MODULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown streaming format ({0}) from stream {1}.
        /// </summary>
        internal static string IDS_ERR_UNKNOWN_STREAM {
            get {
                return ResourceManager.GetString("IDS_ERR_UNKNOWN_STREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find any archive decrunchers.
        /// </summary>
        internal static string IDS_LOADERR_NO_ARCHIVE_DECRUNCHER {
            get {
                return ResourceManager.GetString("IDS_LOADERR_NO_ARCHIVE_DECRUNCHER", resourceCulture);
            }
        }
    }
}
