/******************************************************************************/
/* This source, or parts thereof, may be used in any software as long the     */
/* license of NostalgicPlayer is keep. See the LICENSE file for more          */
/* information.                                                               */
/******************************************************************************/
using Polycode.NostalgicPlayer.Agent.Player.FaceTheMusic.Containers;
using Polycode.NostalgicPlayer.Kit.Containers.Types;

namespace Polycode.NostalgicPlayer.Agent.Player.FaceTheMusic
{
	/// <summary>
	/// Different tables needed
	/// </summary>
	internal static class Tables
	{
		/********************************************************************/
		/// <summary>
		/// Panning value for each channel
		/// </summary>
		/********************************************************************/
		public static readonly ChannelPanningType[] PanPos =
		[
			ChannelPanningType.Left, ChannelPanningType.Left, ChannelPanningType.Right, ChannelPanningType.Right,
			ChannelPanningType.Right, ChannelPanningType.Right, ChannelPanningType.Left, ChannelPanningType.Left
		];



		/********************************************************************/
		/// <summary>
		/// Sample which play silence. Used when no sample is played
		/// </summary>
		/********************************************************************/
		public static readonly Sample QuietSample = new Sample
		{
			Name = null,
			SampleData = new sbyte[4],
			OneshotLength = 2,
			LoopStart = 0,
			LoopLength = 0,
			TotalLength = 4,
		};



		/********************************************************************/
		/// <summary>
		/// Holds the real volume to set for each track volume effect
		/// </summary>
		/********************************************************************/
		public static readonly byte[] EffectVolume =
		[
			0, 7, 14, 21, 28, 36, 43, 50, 57, 64
		];



		/********************************************************************/
		/// <summary>
		/// Periods. The first number on each line is the note period. The
		/// rest of the numbers are used for portamento
		/// </summary>
		/********************************************************************/
		public static readonly ushort[] Periods =
		[
			855, 849, 843, 837, 831, 825, 819, 813,
			807, 801, 796, 790, 784, 779, 773, 767,
			762, 756, 751, 746, 740, 735, 730, 724,
			719, 714, 709, 704, 699, 694, 689, 684,
			679, 674, 669, 664, 659, 655, 650, 645,
			641, 636, 631, 627, 622, 618, 613, 609,
			605, 600, 596, 592, 587, 583, 579, 575,
			571, 567, 563, 558, 554, 550, 547, 543,
			539, 535, 531, 527, 523, 520, 516, 512,
			508, 505, 501, 498, 494, 490, 487, 483,
			480, 476, 473, 470, 466, 463, 460, 456,
			453, 450, 446, 443, 440, 437, 434, 431,

			428, 424, 421, 418, 415, 412, 409, 406,
			404, 401, 398, 395, 392, 389, 386, 384,
			381, 378, 375, 373, 370, 367, 365, 362,
			360, 357, 354, 352, 349, 347, 344, 342,
			339, 337, 334, 332, 330, 327, 325, 323,
			320, 318, 316, 313, 311, 309, 307, 305,
			302, 300, 298, 296, 294, 292, 290, 287,
			285, 283, 281, 279, 277, 275, 273, 271,
			269, 267, 265, 264, 262, 260, 258, 256,
			254, 252, 251, 249, 247, 245, 243, 242,
			240, 238, 237, 235, 233, 231, 230, 228,
			226, 225, 223, 222, 220, 218, 217, 215,

			214, 212, 211, 209, 208, 206, 205, 203,
			202, 200, 199, 197, 196, 195, 193, 192,
			190, 189, 188, 186, 185, 184, 182, 181,
			180, 178, 177, 176, 175, 173, 172, 171,
			170, 168, 167, 166, 165, 164, 162, 161,
			160, 159, 158, 157, 156, 154, 153, 152,
			151, 150, 149, 148, 147, 146, 145, 144,
			143, 142, 141, 140, 139, 138, 137, 136,
			135, 134, 133, 132, 131, 130, 129, 128,
			127, 126, 125, 124, 123, 123, 122, 121
		];



		/********************************************************************/
		/// <summary>
		/// Holds the different LFO shapes
		/// </summary>
		/********************************************************************/
		public static readonly sbyte[][] LfoShapes =
		[
			// Sine
			[
				   0,    4,    8,   12,   16,   20,   24,   28,   33,   37,   41,   44,   48,   52,   56,   60,
				  63,   67,   70,   74,   77,   80,   84,   87,   90,   93,   95,   98,  101,  103,  105,  108,
				 110,  112,  114,  115,  117,  119,  120,  121,  122,  123,  124,  125,  126,  126,  126,  126,
				 126,  126,  126,  126,  125,  125,  124,  123,  122,  121,  119,  118,  116,  115,  113,  111,
				 109,  107,  104,  102,   99,   97,   94,   91,   88,   85,   82,   79,   75,   72,   69,   65,
				  61,   58,   54,   50,   46,   43,   39,   35,   31,   26,   22,   18,   14,   10,    6,    2,
				  -2,   -6,  -10 , -14,  -18,  -22,  -26,  -31,  -35,  -39,  -43,  -46,  -50,  -54,  -58,  -61,
				 -65,  -69,  -72,  -75,  -79,  -82,  -85,  -88,  -91,  -94,  -97,  -99, -102, -104, -107, -109,
				-111, -113, -115, -116, -118, -119, -121, -122, -123, -124, -125, -125, -126, -126, -126, -126,
				-126, -126, -126, -126, -125, -124, -123, -122, -121, -120, -119, -117, -115, -114, -112, -110,
				-108, -105, -103, -101,  -98,  -95,  -93,  -90,  -87,  -84,  -80,  -77,  -74,  -70,  -67,  -63,
				 -60,  -56,  -52,  -48,  -44,  -41,  -37,  -33,  -28,  -24,  -20,  -16,  -12,   -8,   -4,    0
			],

			// Square
			[
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				 127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
				-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128
			],

			// Triangle
			[
				   2,    5,    8,   10,   13,   16,   18,   21,   23,   26,   29,   31,   34,   37,   39,   42,
				  45,   48,   50,   53,   56,   58,   61,   64,   66,   69,   72,   74,   77,   79,   82,   85,
				  87,   90,   93,   95,   98,  101,  103,  106,  109,  111,  114,  117,  119,  122,  125,  127,
				 127,  125,  122,  119,  117,  114,  111,  109,  106,  103,  101,   98,   95,   93,   90,   87,
				  85,   82,   79,   77,   74,   71,   69,   66,   64,   61,   58,   56,   53,   50,   47,   45,
				  42,   39,   37,   34,   31,   29,   26,   23,   21,   18,   15,   13,   10,    7,    5,    2,
				   0,   -2,   -5,   -8,  -10,  -13,  -16,  -18,  -21,  -24,  -26,  -29,  -32,  -34,  -37,  -40,
				 -42,  -45,  -48,  -50,  -53,  -56,  -58,  -61,  -64,  -66,  -69,  -72,  -74,  -77,  -80,  -82,
				 -85,  -87,  -90,  -93,  -95,  -98, -101, -103, -106, -109, -111, -114, -117, -119, -122, -125,
				-127, -127, -125, -122, -119, -117, -114, -111, -109, -106, -103, -101,  -98,  -95,  -93,  -90,
				 -87,  -85,  -82,  -79,  -77,  -74,  -71,  -69,  -66,  -64,  -61,  -58,  -56,  -53,  -50,  -47,
				 -45,  -42,  -39,  -37,  -34,  -31,  -29,  -26,  -23,  -21,  -18,  -15,  -13,  -10,   -7,   -5
			],

			// Sawtooth, up
			[
				 127,  125,  124,  122,  121,  120,  118,  117,  116,  114,  113,  112,  110,  109,  108,  106,
				 105,  104,  102,  101,  100,   98,   97,   96,   94,   93,   92,   90,   89,   88,   86,   85,
				  84,   82,   81,   80,   78,   77,   76,   74,   73,   72,   70,   69,   68,   66,   65,   64,
				  62,   61,   60,   58,   57,   56,   54,   53,   52,   50,   49,   48,   46,   45,   44,   42,
				  41,   40,   38,   37,   36,   34,   33,   32,   30,   29,   28,   26,   25,   24,   22,   21,
				  20,   18,   17,   16,   14,   13,   12,   10,    9,    8,    6,    5,    4,    2,    1,    0,
				  -1,   -2,   -3,   -5,   -6,   -7,   -9,  -10,  -11,  -13,  -14,  -15,  -17,  -18,  -19,  -21,
				 -22,  -23,  -25,  -26,  -27,  -29,  -30,  -31,  -33,  -34,  -35,  -37,  -38,  -39,  -41,  -42,
				 -43,  -45,  -46,  -47,  -49,  -50,  -51,  -53,  -54,  -55,  -57,  -58,  -59,  -61,  -62,  -63,
				 -65,  -66,  -67,  -69,  -70,  -71,  -73,  -74,  -75,  -77,  -78,  -79,  -81,  -82,  -83,  -85,
				 -86,  -87,  -89,  -90,  -91,  -93,  -94,  -95,  -97,  -98,  -99, -101, -102, -103, -105, -106,
				-107, -109, -110, -111, -113, -114, -115, -117, -118, -119, -121, -122, -123, -125, -126, -128
			],

			// Sawtooth, down
			[
				-128, -126, -125, -123, -122, -121, -119, -118, -117, -115, -114, -113, -111, -110, -109, -107,
				-106, -105, -103, -102, -101,  -99,  -98,  -97,  -95,  -94,  -93,  -91,  -90,  -89,  -87,  -86,
				 -85,  -83,  -82,  -81,  -79,  -78,  -77,  -75,  -74,  -73,  -71,  -70,  -69,  -67,  -66,  -65,
				 -63,  -62,  -61,  -59,  -58,  -57,  -55,  -54,  -53,  -51,  -50,  -49,  -47,  -46,  -45,  -43,
				 -42,  -41,  -39,  -38,  -37,  -35,  -34,  -33,  -31,  -30,  -29,  -27,  -26,  -25,  -23,  -22,
				 -21,  -19,  -18,  -17,  -15,  -14,  -13,  -11,  -10,   -9,   -7,   -6,   -5,   -3,   -2,   -1,
				   0,    1,    2,    4,    5,    6,    8,    9,   10,   12,   13,   14,   16,   17,   18,   20,
				  21,   22,   24,   25,   26,   28,   29,   30,   32,   33,   34,   36,   37,   38,   40,   41,
				  42,   44,   45,   46,   48,   49,   50,   52,   53,   54,   56,   57,   58,   60,   61,   62,
				  64,   65,   66,   68,   69,   70,   72,   73,   74,   76,   77,   78,   80,   81,   82,   84,
				  85,   86,   88,   89,   90,   92,   93,   94,   96,   97,   98,  100,  101,  102,  104,  105,
				 106,  108,  109,  110,  112,  113,  114,  116,  117,  118,  120,  121,  122,  124,  125,  127,
			]
		];
	};
}
